pipeline {
    agent any 

    environment {
        PROJECT_PATH = 'CSharp/DotNet5/WebApiApplication'
        PUBLISH_PATH = 'CSharp/DotNet5/WebApiApplication/bin/Release/net5.0'
        VERSION = '0.0.2'
    }

    stages {
        stage('Restore Packages') {
            steps{
                echo '---- Restore Packages ----'
                dir("${env.PROJECT_PATH}"){
                    sh 'pwd'                
                    sh 'dotnet restore'
                }
            }
        }
        stage('Clean'){
            steps{
                echo '---- Clean ----'
                dir("${env.PROJECT_PATH}"){
                    sh 'dotnet clean WebApiApplication.csproj --configuration Release'
                }
            }
        }
        stage('Build'){
            steps{
                echo '---- Build ----'
                dir("${env.PROJECT_PATH}"){
                    sh 'dotnet build WebApiApplication.csproj --configuration Release --no-restore'
                }
            }
        }
        stage('Publish'){
            steps{
                echo '---- Publish ----'
                dir("${env.PROJECT_PATH}"){
                    sh 'dotnet publish WebApiApplication.csproj --configuration Release --no-restore'        
                }
            }
        }

        stage('Build Image') {
            steps {
                echo '---- Build Image ----'
                dir("${env.PROJECT_PATH}") {
                    script {
                        def customImage = docker.build("registry.cnakj.shop/library/test-image:${env.VERSION}")
                        customImage.push()
                    }
                }
            }
        }

        // stage('Docker Build') {
        //     steps {
        //         echo '----- Docker Build ----'
        //         dir("${env.PROJECT_PATH}"){
        //             sh "docker build -t registry.cnakj.shop/library/test-docker-pipeline:${env.VERSION} ."
        //         }
        //     }
        // }
        // stage('push Docker Image to Harbor') {
        //     steps {
        //         echo '---- Push to Harbor ----'
        //         dir("${env.PROJECT_PATH}") {
        //             sh "docker push registry.cnakj.shop/library/test-docker-pipeline:${env.VERSION}"
        //         }
        //     }
        // }



        // stage('Upload folder to S3 Bucket'){
        //     steps{
        //         echo '---- Upload folder to S3 Bucket'
        //         dir("${env.PUBLISH_PATH}"){
        //             sh 'aws s3 cp publish s3://why-not-bucket/publish --recursive'
        //         }
        //     }
        // }
    }
}